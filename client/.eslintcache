[{"C:\\Users\\areye\\project\\community-chat-app\\client\\src\\index.js":"1","C:\\Users\\areye\\project\\community-chat-app\\client\\src\\reportWebVitals.js":"2","C:\\Users\\areye\\project\\community-chat-app\\client\\src\\App.js":"3","C:\\Users\\areye\\project\\community-chat-app\\client\\src\\Context\\AuthContext.js":"4","C:\\Users\\areye\\project\\community-chat-app\\client\\src\\pages\\Dashboard.js":"5","C:\\Users\\areye\\project\\community-chat-app\\client\\src\\pages\\Home.js":"6","C:\\Users\\areye\\project\\community-chat-app\\client\\src\\pages\\Login.js":"7","C:\\Users\\areye\\project\\community-chat-app\\client\\src\\pages\\Register.js":"8","C:\\Users\\areye\\project\\community-chat-app\\client\\src\\hocs\\PrivateRoute.js":"9","C:\\Users\\areye\\project\\community-chat-app\\client\\src\\hocs\\PublicRoute.js":"10","C:\\Users\\areye\\project\\community-chat-app\\client\\src\\Services\\AuthService.js":"11","C:\\Users\\areye\\project\\community-chat-app\\client\\src\\components\\Col\\index.js":"12","C:\\Users\\areye\\project\\community-chat-app\\client\\src\\components\\Container\\index.js":"13","C:\\Users\\areye\\project\\community-chat-app\\client\\src\\components\\ContainerFluid\\index.js":"14","C:\\Users\\areye\\project\\community-chat-app\\client\\src\\components\\Row\\index.js":"15","C:\\Users\\areye\\project\\community-chat-app\\client\\src\\components\\Sidebar\\index.js":"16","C:\\Users\\areye\\project\\community-chat-app\\client\\src\\components\\Header\\index.js":"17","C:\\Users\\areye\\project\\community-chat-app\\client\\src\\components\\ChatBox\\index.js":"18","C:\\Users\\areye\\project\\community-chat-app\\client\\src\\components\\Message\\index.js":"19","C:\\Users\\areye\\project\\community-chat-app\\client\\src\\Services\\MessageService.js":"20","C:\\Users\\areye\\project\\community-chat-app\\client\\src\\components\\NavItem\\index.js":"21","C:\\Users\\areye\\project\\community-chat-app\\client\\src\\components\\LogoutButton\\index.js":"22","C:\\Users\\areye\\project\\community-chat-app\\client\\src\\components\\Chat\\index.js":"23"},{"size":358,"mtime":1610602788399,"results":"24","hashOfConfig":"25"},{"size":362,"mtime":1609817805647,"results":"26","hashOfConfig":"25"},{"size":1404,"mtime":1610824536577,"results":"27","hashOfConfig":"25"},{"size":1057,"mtime":1610602788391,"results":"28","hashOfConfig":"25"},{"size":686,"mtime":1610229297278,"results":"29","hashOfConfig":"25"},{"size":124,"mtime":1610602788400,"results":"30","hashOfConfig":"25"},{"size":3369,"mtime":1610602788401,"results":"31","hashOfConfig":"25"},{"size":3423,"mtime":1610602788402,"results":"32","hashOfConfig":"25"},{"size":711,"mtime":1610602788397,"results":"33","hashOfConfig":"25"},{"size":849,"mtime":1610602788398,"results":"34","hashOfConfig":"25"},{"size":1781,"mtime":1610602788392,"results":"35","hashOfConfig":"25"},{"size":119,"mtime":1610229297265,"results":"36","hashOfConfig":"25"},{"size":120,"mtime":1610229297266,"results":"37","hashOfConfig":"25"},{"size":136,"mtime":1610229297267,"results":"38","hashOfConfig":"25"},{"size":100,"mtime":1610229297274,"results":"39","hashOfConfig":"25"},{"size":510,"mtime":1610422512128,"results":"40","hashOfConfig":"25"},{"size":1653,"mtime":1610602788393,"results":"41","hashOfConfig":"25"},{"size":1100,"mtime":1610422512127,"results":"42","hashOfConfig":"25"},{"size":623,"mtime":1610602788395,"results":"43","hashOfConfig":"25"},{"size":159,"mtime":1610422512124,"results":"44","hashOfConfig":"25"},{"size":447,"mtime":1610602788396,"results":"45","hashOfConfig":"25"},{"size":1066,"mtime":1610602788394,"results":"46","hashOfConfig":"25"},{"size":2680,"mtime":1610422512126,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"1rqldid",{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"50"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"50"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"50"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"50"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"50"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"50"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"50"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"50"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"50"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"50"},"C:\\Users\\areye\\project\\community-chat-app\\client\\src\\index.js",[],["105","106"],"C:\\Users\\areye\\project\\community-chat-app\\client\\src\\reportWebVitals.js",[],"C:\\Users\\areye\\project\\community-chat-app\\client\\src\\App.js",["107","108","109","110","111","112"],"C:\\Users\\areye\\project\\community-chat-app\\client\\src\\Context\\AuthContext.js",["113"],"import { createContext, useState, useEffect } from \"react\";\nimport AuthService from \"../Services/AuthService\";\n\n//Export Provider and Consumer for global state.\nexport const AuthContext = createContext();\n\nexport default ({ children }) => {\n    const [user, setUser] = useState(null);\n    const [isAuthenticated, setIsAuthenticated] = useState(false);\n    const [isLoaded, setIsLoaded] = useState(false);\n\n    useEffect(() => {\n        AuthService.isAuthenticated().then(data => {\n            //Once the user is authenticatd, set the global state authentication.\n            setUser(data.user);\n            setIsAuthenticated(data.isAuthenticated);\n            setIsLoaded(true);\n        });\n    }, []);\n\n    //Return the children wrapped with the provider of the global context (once loaded).\n    return (\n        <div>\n            {!isLoaded ? <h1>Loading...</h1> : \n            <AuthContext.Provider value={{ user, setUser, isAuthenticated, setIsAuthenticated }}>\n                { children }\n            </AuthContext.Provider>}\n        </div>\n    );\n} ","C:\\Users\\areye\\project\\community-chat-app\\client\\src\\pages\\Dashboard.js",[],"C:\\Users\\areye\\project\\community-chat-app\\client\\src\\pages\\Home.js",[],"C:\\Users\\areye\\project\\community-chat-app\\client\\src\\pages\\Login.js",[],"C:\\Users\\areye\\project\\community-chat-app\\client\\src\\pages\\Register.js",["114"],"import { useState, useRef, useEffect } from \"react\";\nimport AuthService from \"../Services/AuthService\";\nimport { AuthContext } from \"../Context/AuthContext\";\n\n//Import Components\nimport Container from \"../components/Container\";\nimport Message from \"../components/Message\";\nimport Header from \"../components/Header\";\n\nconst Register = (props) => {\n    //Initialize user state.\n    const [user, setUser] = useState({email: \"\", username: \"\", password: \"\"});\n    //Initialize message state.\n    const [message, setMessage] = useState(null);\n    //Set input fields to enabled by default until logged in.\n    const [disabled, setDisabled] = useState(false);\n\n    //Create a reference for the timer.\n    let timerID = useRef(null);\n\n    useEffect(() => {\n        return () => {\n            clearTimeout(timerID);\n        }\n    }, []);\n\n    //When the input changes, set the username/password to the current value.\n    const handleChange = (event) => {\n        event.preventDefault();\n        setUser(\n            {\n                ...user, \n                [event.target.name] : event.target.value\n            }\n        );\n    }\n\n    /*\n    const resetForm = () => {\n        setUser(\n            {\n                email: \"\",\n                username: \"\", \n                password: \"\", \n            }\n        );\n    }\n    */\n\n    //Handle when the form is submitted.\n    const handleSubmit = (event) => {\n        event.preventDefault();\n        //Send user information to sign up.\n        AuthService.register(user).then(data => {\n            //After registering, get the message returned back.\n            const { message } = data;\n            setMessage(message);\n            //Reset the form.\n            //resetForm();\n            //As long as there is no error, set the timer for 2 seconds to redirect to login page after registering.\n            if(!message.msgError) {\n                setDisabled(true);\n                timerID = setTimeout(() => {\n                    props.history.push(\"/login\");\n                }, 2000);\n            }\n        });\n    };\n\n    return (\n        <>\n        <Header/>\n        <Container>\n            <form className=\"mt-5\" onSubmit={handleSubmit}>\n                <h3 className=\"text-center my-4\">REGISTER</h3>\n                <hr className=\"my-4\"/>\n                <div className=\"form-group\">\n                    <input type=\"email\" name=\"email\" onChange={handleChange} className=\"form-control form-control-lg\" placeholder=\"Email\" aria-label=\"Enter Email\" disabled={disabled} required/>\n                </div>\n                <div className=\"form-group\">\n                    <input type=\"text\" name=\"username\" onChange={handleChange} className=\"form-control form-control-lg\" placeholder=\"Username\" aria-label=\"Enter Username\" disabled={disabled} minLength=\"4\" required/>\n                </div>\n                <div className=\"form-group\">\n                    <input type=\"password\" name=\"password\" onChange={handleChange} className=\"form-control form-control-lg\" placeholder=\"Password\" aria-label=\"Enter Password\" disabled={disabled} minLength=\"4\" required/>\n                </div>\n                <button className=\"btn btn-lg btn-primary btn-block\" type=\"submit\" disabled={disabled}>\n                    SIGN UP\n                </button>\n            </form>\n            {message ? <Message message={message}/> : null}\n        </Container>\n        </>\n    );\n};\n\nexport default Register;","C:\\Users\\areye\\project\\community-chat-app\\client\\src\\hocs\\PrivateRoute.js",["115"],"import { useContext } from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { AuthContext } from \"../Context/AuthContext\";\n\nconst PrivateRoute = ({component: Component, roles, ...rest}) => {\n    const { isAuthenticated, user } = useContext(AuthContext);\n    return(\n        <Route {...rest} render={props => {\n            //If user is not authenticated, redirect to the login page (from this location).\n            if(!isAuthenticated) {\n                return <Redirect to={{ \n                    pathname: \"/\", \n                    state: {from: props.location}\n                }}/>\n            }\n            return <Component {...props}/>\n        }}/>\n    )\n}\n\nexport default PrivateRoute;","C:\\Users\\areye\\project\\community-chat-app\\client\\src\\hocs\\PublicRoute.js",[],"C:\\Users\\areye\\project\\community-chat-app\\client\\src\\Services\\AuthService.js",["116"],"export default {\n    login: user => {\n        return fetch(\"/auth/login\", {\n            method: \"post\",\n            body: JSON.stringify(user),\n            headers: {\n                \"Content-Type\": \"application/json\"\n            }\n        }).then(response => {\n            //Passport sends 401 error back if not authenticated\n            if(response.status !== 401) {\n                return response.json().then(data => data);\n            } else {\n                return { \n                    isAuthenticated: false,\n                    user: {email: \"\", username: \"\"},\n                    message: {\n                        msgBody: \"Incorrect username or password.\",\n                        msgError: true\n                    }\n                };\n            }\n        });\n    },\n    register: user => {\n        return fetch(\"/auth/register\", {\n            method: \"post\",\n            body: JSON.stringify(user),\n            headers: {\n                \"Content-Type\": \"application/json\"\n            }\n        }).then(response => response.json())\n          .then(data => data);\n    },\n    logout: () => {\n        return fetch(\"/auth/logout\")\n            .then(response => response.json())\n            .then(data => data);\n    },\n    //Sync back-end and front-end together\n    isAuthenticated: () => {\n        return fetch(\"/auth/authenticated\")\n            .then(response => {\n                //Passport sends 401 error back if not authenticated\n                if(response.status !== 401) {\n                    return response.json().then(data => data);\n                } else {\n                    return { \n                        isAuthenticated: false,\n                        user: {email: \"\", username: \"\"}\n                    };\n                }\n            });\n    }\n}","C:\\Users\\areye\\project\\community-chat-app\\client\\src\\components\\Col\\index.js",[],"C:\\Users\\areye\\project\\community-chat-app\\client\\src\\components\\Container\\index.js",[],"C:\\Users\\areye\\project\\community-chat-app\\client\\src\\components\\ContainerFluid\\index.js",[],"C:\\Users\\areye\\project\\community-chat-app\\client\\src\\components\\Row\\index.js",[],"C:\\Users\\areye\\project\\community-chat-app\\client\\src\\components\\Sidebar\\index.js",["117"],"import { ListGroup } from \"react-bootstrap\";\nimport { IndeterminateCheckBox } from \"@material-ui/icons\";\n\nconst Sidebar = () => {\n    const sampleUsers = [\"bobby\", \"sally\", \"smarty head\"];\n\n    return (\n        <ListGroup>\n            {sampleUsers.map((contact, index) => {\n                return (\n                    <ListGroup.Item key={index}>\n                        {contact}\n                    </ListGroup.Item>\n                );\n            })}\n        </ListGroup>\n    );\n};\n\nexport default Sidebar;","C:\\Users\\areye\\project\\community-chat-app\\client\\src\\components\\Header\\index.js",["118","119"],"import { useContext } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport AuthService from \"../../Services/AuthService\";\nimport { AuthContext } from \"../../Context/AuthContext\";\n\nimport Navbar from \"react-bootstrap/Navbar\";\nimport Nav from \"react-bootstrap/Nav\";\nimport NavItem from \"../NavItem\";\nimport LogoutButton from \"../LogoutButton\"\n\nconst Header = (props) => {\n    const { isAuthenticated, user } = useContext(AuthContext);\n\n    //Render the navbar links when not logged in.\n    const unauthenticatedNabar = () => {\n        return (\n            <>\n                <NavItem text={\"LOGIN\"} tagName={\"login\"} current={props.current}/>\n                <NavItem text={\"REGISTER\"} tagName={\"register\"} current={props.current}/>\n            </>\n        );\n    };\n\n    //Render navbar links when logged in.\n    const authenticatedNavbar = () => {\n        return (\n            <>\n                <NavItem text={`Welcome, ${isAuthenticated ? user.username : \"GuestUser\"}`} tagName={\"user\"} current={props.current}/>\n                <LogoutButton/>\n            </>\n        );\n    };\n\n    return (\n        <Navbar className=\"navbar-light bg-light p-5\" expand=\"md\">\n            <Navbar.Brand href=\"/\"><span className=\"larger-spacing larger-text font-light\">COMMUNITY CHAT APP</span></Navbar.Brand>\n            <Navbar.Toggle aria-controls=\"basic-navbar-nav\"/>\n            <Navbar.Collapse id=\"basic-navbar-nav\">\n                <Nav className=\"ml-auto\">\n                    { !isAuthenticated ? unauthenticatedNabar() : authenticatedNavbar() }\n                </Nav>\n            </Navbar.Collapse>\n        </Navbar>\n    );\n}\n\nexport default Header;","C:\\Users\\areye\\project\\community-chat-app\\client\\src\\components\\ChatBox\\index.js",["120"],"import { useEffect, useState } from \"react\";\nimport Container from \"../Container\";\nimport ContainerFluid from \"../ContainerFluid\";\nimport Chat from \"../Chat\";\n\n//Include the Message Service.\nimport MessageService from \"../../Services/MessageService\";\n\nconst ChatBox = (props) => {\n\n    const [messages, setMessages] = useState([]);\n\n    useEffect(() => {\n        MessageService.getAllMessages()\n            .then(result => {\n                console.log(\"in useEffect\");\n                console.log(result.data);\n                setMessages(result.data);\n                /*\n                const messagesFromResult = [];\n                result.forEach(thisMessage => {\n                    //THIS MIGHT BE thiMessage.data\n                    messagesFromResult.push(thisMessage);\n                });\n                */\n\n               // setMessages(messagesFromResult);\n               //setMessages(result.data.data);\n                \n            });\n    }, []);\n\n    return (\n        <ContainerFluid>\n            <Chat messages={messages}/>\n        </ContainerFluid>\n    );\n}\n\nexport default ChatBox;","C:\\Users\\areye\\project\\community-chat-app\\client\\src\\components\\Message\\index.js",[],"C:\\Users\\areye\\project\\community-chat-app\\client\\src\\Services\\MessageService.js",["121"],"import axios from \"axios\";\n\nexport default {\n    //Get all messages from DB.\n    getAllMessages: () => {\n        return axios.get(`/api/messages/all`);\n    }\n}","C:\\Users\\areye\\project\\community-chat-app\\client\\src\\components\\NavItem\\index.js",[],"C:\\Users\\areye\\project\\community-chat-app\\client\\src\\components\\LogoutButton\\index.js",["122","123"],"import { useContext } from \"react\";\nimport { AuthContext } from \"../../Context/AuthContext\";\nimport AuthService from \"../../Services/AuthService\";\n\nimport Nav from \"react-bootstrap/Nav\";\n\nconst LogoutButton = () => {\n\n    const { isAuthenticated, user, setIsAuthenticated, setUser } = useContext(AuthContext);\n\n    //Handle logging the user out.\n    const handleLogOut = () => {\n        //Using the logout function in AuthService, log the user out.\n        AuthService.logout().then(data => {\n            //From server, we will now have an empty user, so we want to update the global state.\n            if(data.success) {\n                setUser(data.user);\n                setIsAuthenticated(false);\n            }\n        });\n    };\n\n    return (\n        <span className=\"nav-item px-3\">\n            <Nav.Link onClick={handleLogOut} href=\"/\">\n                <div className=\"text-center\">\n                    <hr className=\"d-md-none\"/>\n                    LOGOUT\n                </div>\n            </Nav.Link>\n        </span>\n    );\n}\n\nexport default LogoutButton;","C:\\Users\\areye\\project\\community-chat-app\\client\\src\\components\\Chat\\index.js",["124","125","126","127"],"import { Avatar, IconButton } from '@material-ui/core'\nimport { AttachFile, MoreVert, SearchOutlined, InsertEmoticon, Mic } from '@material-ui/icons'\nimport React, { useState } from 'react';\n//import axios from '../axios';\nimport './Chat.css';\n// Messages is provided as a props, so we need to retrieve it via props and then destructure messages out of props\nfunction Chat(props) {\n    const { messages } = props;\n    const [input, setInput] = useState(\"\");\n\n    const sendMessage = async (event) => {\n        event.preventDefault();\n\n        /*\n        //Send the input as message using axios\n        await axios.post('/api/messages/new', {\n            message: input,\n            name: \"Demo App\",\n            timestamp: \"Just now!\",\n            received: false,\n        })\n        */\n\n        //Once axios has completed, set the input back to blank\n        setInput(\"\");\n    }\n\n    return (\n        <div className='chat'>\n            <div className=\"chat_header\">\n                <Avatar />\n\n                <div className='chat_headerInfo'>\n                    <h3>Room Name</h3>\n                    <p>Last seen at...</p>\n                </div>\n            </div>\n\n            <div className='chat_body'>\n                {/* Here we loop through messages and create a new chat bubble for each message. if the .recieved is true,\n                 the bubble will be given the className 'chat_reciever' for different styling*/}\n                {messages.map((message, index) => (\n                    <p key={index} className={`chat_message ${message.received && \"chat_reciever\"}`}>\n                    <span className='chat_name'>{message.name}</span>\n                    {message.message}\n                    <span className='chat_timestamp'> \n                        {message.timestamp}\n                    </span>\n                </p>\n                ))}\n                \n            </div>\n\n            <div className=\"chat_footer\">\n                <InsertEmoticon />\n                <form>\n                    {/* The value will be set to the state \"input\" \n                        and every time the input is changed, we will set the\n                        new information to input using setInput */}\n                    <input \n                        value={input} \n                        onChange={e => setInput(e.target.value)} \n                        placeholder='Type a message' type=\"text\" \n                    />\n                    <button onClick={sendMessage} type='submit'>\n                            Send a message\n                    </button>\n                </form>\n                <Mic />\n            </div>\n        </div>\n    )\n}\n\nexport default Chat",{"ruleId":"128","replacedBy":"129"},{"ruleId":"130","replacedBy":"131"},{"ruleId":"132","severity":1,"message":"133","line":2,"column":21,"nodeType":"134","messageId":"135","endLine":2,"endColumn":29},{"ruleId":"132","severity":1,"message":"136","line":15,"column":8,"nodeType":"134","messageId":"135","endLine":15,"endColumn":17},{"ruleId":"132","severity":1,"message":"137","line":16,"column":8,"nodeType":"134","messageId":"135","endLine":16,"endColumn":22},{"ruleId":"132","severity":1,"message":"138","line":17,"column":8,"nodeType":"134","messageId":"135","endLine":17,"endColumn":11},{"ruleId":"132","severity":1,"message":"139","line":18,"column":8,"nodeType":"134","messageId":"135","endLine":18,"endColumn":11},{"ruleId":"132","severity":1,"message":"140","line":19,"column":8,"nodeType":"134","messageId":"135","endLine":19,"endColumn":15},{"ruleId":"141","severity":1,"message":"142","line":7,"column":1,"nodeType":"143","endLine":30,"endColumn":2},{"ruleId":"132","severity":1,"message":"144","line":3,"column":10,"nodeType":"134","messageId":"135","endLine":3,"endColumn":21},{"ruleId":"132","severity":1,"message":"145","line":6,"column":30,"nodeType":"134","messageId":"135","endLine":6,"endColumn":34},{"ruleId":"141","severity":1,"message":"146","line":1,"column":1,"nodeType":"143","endLine":55,"endColumn":2},{"ruleId":"132","severity":1,"message":"147","line":2,"column":10,"nodeType":"134","messageId":"135","endLine":2,"endColumn":31},{"ruleId":"132","severity":1,"message":"148","line":2,"column":10,"nodeType":"134","messageId":"135","endLine":2,"endColumn":14},{"ruleId":"132","severity":1,"message":"149","line":3,"column":8,"nodeType":"134","messageId":"135","endLine":3,"endColumn":19},{"ruleId":"132","severity":1,"message":"136","line":2,"column":8,"nodeType":"134","messageId":"135","endLine":2,"endColumn":17},{"ruleId":"141","severity":1,"message":"146","line":3,"column":1,"nodeType":"143","endLine":8,"endColumn":2},{"ruleId":"132","severity":1,"message":"150","line":9,"column":13,"nodeType":"134","messageId":"135","endLine":9,"endColumn":28},{"ruleId":"132","severity":1,"message":"145","line":9,"column":30,"nodeType":"134","messageId":"135","endLine":9,"endColumn":34},{"ruleId":"132","severity":1,"message":"151","line":1,"column":18,"nodeType":"134","messageId":"135","endLine":1,"endColumn":28},{"ruleId":"132","severity":1,"message":"152","line":2,"column":10,"nodeType":"134","messageId":"135","endLine":2,"endColumn":20},{"ruleId":"132","severity":1,"message":"153","line":2,"column":22,"nodeType":"134","messageId":"135","endLine":2,"endColumn":30},{"ruleId":"132","severity":1,"message":"154","line":2,"column":32,"nodeType":"134","messageId":"135","endLine":2,"endColumn":46},"no-native-reassign",["155"],"no-negated-in-lhs",["156"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'Container' is defined but never used.","'ContainerFluid' is defined but never used.","'Row' is defined but never used.","'Col' is defined but never used.","'Sidebar' is defined but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'AuthContext' is defined but never used.","'user' is assigned a value but never used.","Assign object to a variable before exporting as module default","'IndeterminateCheckBox' is defined but never used.","'Link' is defined but never used.","'AuthService' is defined but never used.","'isAuthenticated' is assigned a value but never used.","'IconButton' is defined but never used.","'AttachFile' is defined but never used.","'MoreVert' is defined but never used.","'SearchOutlined' is defined but never used.","no-global-assign","no-unsafe-negation"]