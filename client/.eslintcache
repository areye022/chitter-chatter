[{"/Users/michaelhanson/Documents/Bootcamp/Week22/communitychat/community-chat-app/client/src/index.js":"1","/Users/michaelhanson/Documents/Bootcamp/Week22/communitychat/community-chat-app/client/src/reportWebVitals.js":"2","/Users/michaelhanson/Documents/Bootcamp/Week22/communitychat/community-chat-app/client/src/App.js":"3","/Users/michaelhanson/Documents/Bootcamp/Week22/communitychat/community-chat-app/client/src/pages/Dashboard.js":"4","/Users/michaelhanson/Documents/Bootcamp/Week22/communitychat/community-chat-app/client/src/pages/Home.js":"5","/Users/michaelhanson/Documents/Bootcamp/Week22/communitychat/community-chat-app/client/src/components/Header/index.js":"6","/Users/michaelhanson/Documents/Bootcamp/Week22/communitychat/community-chat-app/client/src/components/ContainerFluid/index.js":"7","/Users/michaelhanson/Documents/Bootcamp/Week22/communitychat/community-chat-app/client/src/components/Container/index.js":"8","/Users/michaelhanson/Documents/Bootcamp/Week22/communitychat/community-chat-app/client/src/components/Row/index.js":"9","/Users/michaelhanson/Documents/Bootcamp/Week22/communitychat/community-chat-app/client/src/components/Col/index.js":"10","/Users/michaelhanson/Documents/Bootcamp/Week22/communitychat/community-chat-app/client/src/components/Sidebar/index.js":"11","/Users/michaelhanson/Documents/Bootcamp/Week22/communitychat/community-chat-app/client/src/components/ChatBox/index.js":"12","/Users/michaelhanson/Documents/Bootcamp/Week22/communitychat/community-chat-app/client/src/components/NavItem/index.js":"13","/Users/michaelhanson/Documents/Bootcamp/Week22/communitychat/community-chat-app/client/src/Services/MessageService.js":"14","/Users/michaelhanson/Documents/Bootcamp/Week22/communitychat/community-chat-app/client/src/components/Chat/index.js":"15","/Users/michaelhanson/Documents/Bootcamp/Week22/communitychat/community-chat-app/client/src/Context/AuthContext.js":"16","/Users/michaelhanson/Documents/Bootcamp/Week22/communitychat/community-chat-app/client/src/pages/Login.js":"17","/Users/michaelhanson/Documents/Bootcamp/Week22/communitychat/community-chat-app/client/src/pages/Register.js":"18","/Users/michaelhanson/Documents/Bootcamp/Week22/communitychat/community-chat-app/client/src/hocs/PublicRoute.js":"19","/Users/michaelhanson/Documents/Bootcamp/Week22/communitychat/community-chat-app/client/src/hocs/PrivateRoute.js":"20","/Users/michaelhanson/Documents/Bootcamp/Week22/communitychat/community-chat-app/client/src/Services/AuthService.js":"21","/Users/michaelhanson/Documents/Bootcamp/Week22/communitychat/community-chat-app/client/src/components/Message/index.js":"22","/Users/michaelhanson/Documents/Bootcamp/Week22/communitychat/community-chat-app/client/src/components/LogoutButton/index.js":"23"},{"size":358,"mtime":1610602165018,"results":"24","hashOfConfig":"25"},{"size":362,"mtime":1609816297208,"results":"26","hashOfConfig":"25"},{"size":1004,"mtime":1610821368584,"results":"27","hashOfConfig":"25"},{"size":686,"mtime":1610228781345,"results":"28","hashOfConfig":"25"},{"size":182,"mtime":1610821524989,"results":"29","hashOfConfig":"25"},{"size":1653,"mtime":1610602165013,"results":"30","hashOfConfig":"25"},{"size":136,"mtime":1609823214357,"results":"31","hashOfConfig":"25"},{"size":120,"mtime":1609822628034,"results":"32","hashOfConfig":"25"},{"size":100,"mtime":1609822067463,"results":"33","hashOfConfig":"25"},{"size":119,"mtime":1609823058304,"results":"34","hashOfConfig":"25"},{"size":510,"mtime":1610422526121,"results":"35","hashOfConfig":"25"},{"size":1100,"mtime":1610422526120,"results":"36","hashOfConfig":"25"},{"size":447,"mtime":1610602165016,"results":"37","hashOfConfig":"25"},{"size":159,"mtime":1610422526118,"results":"38","hashOfConfig":"25"},{"size":2680,"mtime":1610422526119,"results":"39","hashOfConfig":"25"},{"size":1057,"mtime":1610602165012,"results":"40","hashOfConfig":"25"},{"size":3773,"mtime":1610827448003,"results":"41","hashOfConfig":"25"},{"size":3873,"mtime":1610827470915,"results":"42","hashOfConfig":"25"},{"size":849,"mtime":1610602165017,"results":"43","hashOfConfig":"25"},{"size":711,"mtime":1610602165016,"results":"44","hashOfConfig":"25"},{"size":1781,"mtime":1610602165012,"results":"45","hashOfConfig":"25"},{"size":623,"mtime":1610602165015,"results":"46","hashOfConfig":"25"},{"size":1066,"mtime":1610602165014,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"1fchqvx",{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"50"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"50"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"50"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"50"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"50"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"50"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"50"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"50"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"50"},"/Users/michaelhanson/Documents/Bootcamp/Week22/communitychat/community-chat-app/client/src/index.js",[],["104","105"],"/Users/michaelhanson/Documents/Bootcamp/Week22/communitychat/community-chat-app/client/src/reportWebVitals.js",[],"/Users/michaelhanson/Documents/Bootcamp/Week22/communitychat/community-chat-app/client/src/App.js",["106","107","108","109","110","111"],"/Users/michaelhanson/Documents/Bootcamp/Week22/communitychat/community-chat-app/client/src/pages/Dashboard.js",[],"/Users/michaelhanson/Documents/Bootcamp/Week22/communitychat/community-chat-app/client/src/pages/Home.js",[],"/Users/michaelhanson/Documents/Bootcamp/Week22/communitychat/community-chat-app/client/src/components/Header/index.js",["112","113"],"import { useContext } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport AuthService from \"../../Services/AuthService\";\nimport { AuthContext } from \"../../Context/AuthContext\";\n\nimport Navbar from \"react-bootstrap/Navbar\";\nimport Nav from \"react-bootstrap/Nav\";\nimport NavItem from \"../NavItem\";\nimport LogoutButton from \"../LogoutButton\"\n\nconst Header = (props) => {\n    const { isAuthenticated, user } = useContext(AuthContext);\n\n    //Render the navbar links when not logged in.\n    const unauthenticatedNabar = () => {\n        return (\n            <>\n                <NavItem text={\"LOGIN\"} tagName={\"login\"} current={props.current}/>\n                <NavItem text={\"REGISTER\"} tagName={\"register\"} current={props.current}/>\n            </>\n        );\n    };\n\n    //Render navbar links when logged in.\n    const authenticatedNavbar = () => {\n        return (\n            <>\n                <NavItem text={`Welcome, ${isAuthenticated ? user.username : \"GuestUser\"}`} tagName={\"user\"} current={props.current}/>\n                <LogoutButton/>\n            </>\n        );\n    };\n\n    return (\n        <Navbar className=\"navbar-light bg-light p-5\" expand=\"md\">\n            <Navbar.Brand href=\"/\"><span className=\"larger-spacing larger-text font-light\">COMMUNITY CHAT APP</span></Navbar.Brand>\n            <Navbar.Toggle aria-controls=\"basic-navbar-nav\"/>\n            <Navbar.Collapse id=\"basic-navbar-nav\">\n                <Nav className=\"ml-auto\">\n                    { !isAuthenticated ? unauthenticatedNabar() : authenticatedNavbar() }\n                </Nav>\n            </Navbar.Collapse>\n        </Navbar>\n    );\n}\n\nexport default Header;","/Users/michaelhanson/Documents/Bootcamp/Week22/communitychat/community-chat-app/client/src/components/ContainerFluid/index.js",[],"/Users/michaelhanson/Documents/Bootcamp/Week22/communitychat/community-chat-app/client/src/components/Container/index.js",[],"/Users/michaelhanson/Documents/Bootcamp/Week22/communitychat/community-chat-app/client/src/components/Row/index.js",[],"/Users/michaelhanson/Documents/Bootcamp/Week22/communitychat/community-chat-app/client/src/components/Col/index.js",[],"/Users/michaelhanson/Documents/Bootcamp/Week22/communitychat/community-chat-app/client/src/components/Sidebar/index.js",["114"],"import { ListGroup } from \"react-bootstrap\";\nimport { IndeterminateCheckBox } from \"@material-ui/icons\";\n\nconst Sidebar = () => {\n    const sampleUsers = [\"bobby\", \"sally\", \"smarty head\"];\n\n    return (\n        <ListGroup>\n            {sampleUsers.map((contact, index) => {\n                return (\n                    <ListGroup.Item key={index}>\n                        {contact}\n                    </ListGroup.Item>\n                );\n            })}\n        </ListGroup>\n    );\n};\n\nexport default Sidebar;","/Users/michaelhanson/Documents/Bootcamp/Week22/communitychat/community-chat-app/client/src/components/ChatBox/index.js",["115"],"import { useEffect, useState } from \"react\";\nimport Container from \"../Container\";\nimport ContainerFluid from \"../ContainerFluid\";\nimport Chat from \"../Chat\";\n\n//Include the Message Service.\nimport MessageService from \"../../Services/MessageService\";\n\nconst ChatBox = (props) => {\n\n    const [messages, setMessages] = useState([]);\n\n    useEffect(() => {\n        MessageService.getAllMessages()\n            .then(result => {\n                console.log(\"in useEffect\");\n                console.log(result.data);\n                setMessages(result.data);\n                /*\n                const messagesFromResult = [];\n                result.forEach(thisMessage => {\n                    //THIS MIGHT BE thiMessage.data\n                    messagesFromResult.push(thisMessage);\n                });\n                */\n\n               // setMessages(messagesFromResult);\n               //setMessages(result.data.data);\n                \n            });\n    }, []);\n\n    return (\n        <ContainerFluid>\n            <Chat messages={messages}/>\n        </ContainerFluid>\n    );\n}\n\nexport default ChatBox;","/Users/michaelhanson/Documents/Bootcamp/Week22/communitychat/community-chat-app/client/src/components/NavItem/index.js",[],"/Users/michaelhanson/Documents/Bootcamp/Week22/communitychat/community-chat-app/client/src/Services/MessageService.js",["116"],"import axios from \"axios\";\n\nexport default {\n    //Get all messages from DB.\n    getAllMessages: () => {\n        return axios.get(`/api/messages/all`);\n    }\n}","/Users/michaelhanson/Documents/Bootcamp/Week22/communitychat/community-chat-app/client/src/components/Chat/index.js",["117","118","119","120"],"import { Avatar, IconButton } from '@material-ui/core'\nimport { AttachFile, MoreVert, SearchOutlined, InsertEmoticon, Mic } from '@material-ui/icons'\nimport React, { useState } from 'react';\n//import axios from '../axios';\nimport './Chat.css';\n// Messages is provided as a props, so we need to retrieve it via props and then destructure messages out of props\nfunction Chat(props) {\n    const { messages } = props;\n    const [input, setInput] = useState(\"\");\n\n    const sendMessage = async (event) => {\n        event.preventDefault();\n\n        /*\n        //Send the input as message using axios\n        await axios.post('/api/messages/new', {\n            message: input,\n            name: \"Demo App\",\n            timestamp: \"Just now!\",\n            received: false,\n        })\n        */\n\n        //Once axios has completed, set the input back to blank\n        setInput(\"\");\n    }\n\n    return (\n        <div className='chat'>\n            <div className=\"chat_header\">\n                <Avatar />\n\n                <div className='chat_headerInfo'>\n                    <h3>Room Name</h3>\n                    <p>Last seen at...</p>\n                </div>\n            </div>\n\n            <div className='chat_body'>\n                {/* Here we loop through messages and create a new chat bubble for each message. if the .recieved is true,\n                 the bubble will be given the className 'chat_reciever' for different styling*/}\n                {messages.map((message, index) => (\n                    <p key={index} className={`chat_message ${message.received && \"chat_reciever\"}`}>\n                    <span className='chat_name'>{message.name}</span>\n                    {message.message}\n                    <span className='chat_timestamp'> \n                        {message.timestamp}\n                    </span>\n                </p>\n                ))}\n                \n            </div>\n\n            <div className=\"chat_footer\">\n                <InsertEmoticon />\n                <form>\n                    {/* The value will be set to the state \"input\" \n                        and every time the input is changed, we will set the\n                        new information to input using setInput */}\n                    <input \n                        value={input} \n                        onChange={e => setInput(e.target.value)} \n                        placeholder='Type a message' type=\"text\" \n                    />\n                    <button onClick={sendMessage} type='submit'>\n                            Send a message\n                    </button>\n                </form>\n                <Mic />\n            </div>\n        </div>\n    )\n}\n\nexport default Chat","/Users/michaelhanson/Documents/Bootcamp/Week22/communitychat/community-chat-app/client/src/Context/AuthContext.js",["121"],"import { createContext, useState, useEffect } from \"react\";\nimport AuthService from \"../Services/AuthService\";\n\n//Export Provider and Consumer for global state.\nexport const AuthContext = createContext();\n\nexport default ({ children }) => {\n    const [user, setUser] = useState(null);\n    const [isAuthenticated, setIsAuthenticated] = useState(false);\n    const [isLoaded, setIsLoaded] = useState(false);\n\n    useEffect(() => {\n        AuthService.isAuthenticated().then(data => {\n            //Once the user is authenticatd, set the global state authentication.\n            setUser(data.user);\n            setIsAuthenticated(data.isAuthenticated);\n            setIsLoaded(true);\n        });\n    }, []);\n\n    //Return the children wrapped with the provider of the global context (once loaded).\n    return (\n        <div>\n            {!isLoaded ? <h1>Loading...</h1> : \n            <AuthContext.Provider value={{ user, setUser, isAuthenticated, setIsAuthenticated }}>\n                { children }\n            </AuthContext.Provider>}\n        </div>\n    );\n} ","/Users/michaelhanson/Documents/Bootcamp/Week22/communitychat/community-chat-app/client/src/pages/Login.js",[],"/Users/michaelhanson/Documents/Bootcamp/Week22/communitychat/community-chat-app/client/src/pages/Register.js",["122"],"/Users/michaelhanson/Documents/Bootcamp/Week22/communitychat/community-chat-app/client/src/hocs/PublicRoute.js",[],"/Users/michaelhanson/Documents/Bootcamp/Week22/communitychat/community-chat-app/client/src/hocs/PrivateRoute.js",["123"],"import { useContext } from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { AuthContext } from \"../Context/AuthContext\";\n\nconst PrivateRoute = ({component: Component, roles, ...rest}) => {\n    const { isAuthenticated, user } = useContext(AuthContext);\n    return(\n        <Route {...rest} render={props => {\n            //If user is not authenticated, redirect to the login page (from this location).\n            if(!isAuthenticated) {\n                return <Redirect to={{ \n                    pathname: \"/\", \n                    state: {from: props.location}\n                }}/>\n            }\n            return <Component {...props}/>\n        }}/>\n    )\n}\n\nexport default PrivateRoute;","/Users/michaelhanson/Documents/Bootcamp/Week22/communitychat/community-chat-app/client/src/Services/AuthService.js",["124"],"export default {\n    login: user => {\n        return fetch(\"/auth/login\", {\n            method: \"post\",\n            body: JSON.stringify(user),\n            headers: {\n                \"Content-Type\": \"application/json\"\n            }\n        }).then(response => {\n            //Passport sends 401 error back if not authenticated\n            if(response.status !== 401) {\n                return response.json().then(data => data);\n            } else {\n                return { \n                    isAuthenticated: false,\n                    user: {email: \"\", username: \"\"},\n                    message: {\n                        msgBody: \"Incorrect username or password.\",\n                        msgError: true\n                    }\n                };\n            }\n        });\n    },\n    register: user => {\n        return fetch(\"/auth/register\", {\n            method: \"post\",\n            body: JSON.stringify(user),\n            headers: {\n                \"Content-Type\": \"application/json\"\n            }\n        }).then(response => response.json())\n          .then(data => data);\n    },\n    logout: () => {\n        return fetch(\"/auth/logout\")\n            .then(response => response.json())\n            .then(data => data);\n    },\n    //Sync back-end and front-end together\n    isAuthenticated: () => {\n        return fetch(\"/auth/authenticated\")\n            .then(response => {\n                //Passport sends 401 error back if not authenticated\n                if(response.status !== 401) {\n                    return response.json().then(data => data);\n                } else {\n                    return { \n                        isAuthenticated: false,\n                        user: {email: \"\", username: \"\"}\n                    };\n                }\n            });\n    }\n}","/Users/michaelhanson/Documents/Bootcamp/Week22/communitychat/community-chat-app/client/src/components/Message/index.js",[],"/Users/michaelhanson/Documents/Bootcamp/Week22/communitychat/community-chat-app/client/src/components/LogoutButton/index.js",["125","126"],"import { useContext } from \"react\";\nimport { AuthContext } from \"../../Context/AuthContext\";\nimport AuthService from \"../../Services/AuthService\";\n\nimport Nav from \"react-bootstrap/Nav\";\n\nconst LogoutButton = () => {\n\n    const { isAuthenticated, user, setIsAuthenticated, setUser } = useContext(AuthContext);\n\n    //Handle logging the user out.\n    const handleLogOut = () => {\n        //Using the logout function in AuthService, log the user out.\n        AuthService.logout().then(data => {\n            //From server, we will now have an empty user, so we want to update the global state.\n            if(data.success) {\n                setUser(data.user);\n                setIsAuthenticated(false);\n            }\n        });\n    };\n\n    return (\n        <span className=\"nav-item px-3\">\n            <Nav.Link onClick={handleLogOut} href=\"/\">\n                <div className=\"text-center\">\n                    <hr className=\"d-md-none\"/>\n                    LOGOUT\n                </div>\n            </Nav.Link>\n        </span>\n    );\n}\n\nexport default LogoutButton;",{"ruleId":"127","replacedBy":"128"},{"ruleId":"129","replacedBy":"130"},{"ruleId":"131","severity":1,"message":"132","line":12,"column":8,"nodeType":"133","messageId":"134","endLine":12,"endColumn":14},{"ruleId":"131","severity":1,"message":"135","line":13,"column":8,"nodeType":"133","messageId":"134","endLine":13,"endColumn":17},{"ruleId":"131","severity":1,"message":"136","line":14,"column":8,"nodeType":"133","messageId":"134","endLine":14,"endColumn":22},{"ruleId":"131","severity":1,"message":"137","line":15,"column":8,"nodeType":"133","messageId":"134","endLine":15,"endColumn":11},{"ruleId":"131","severity":1,"message":"138","line":16,"column":8,"nodeType":"133","messageId":"134","endLine":16,"endColumn":11},{"ruleId":"131","severity":1,"message":"139","line":17,"column":8,"nodeType":"133","messageId":"134","endLine":17,"endColumn":15},{"ruleId":"131","severity":1,"message":"140","line":2,"column":10,"nodeType":"133","messageId":"134","endLine":2,"endColumn":14},{"ruleId":"131","severity":1,"message":"141","line":3,"column":8,"nodeType":"133","messageId":"134","endLine":3,"endColumn":19},{"ruleId":"131","severity":1,"message":"142","line":2,"column":10,"nodeType":"133","messageId":"134","endLine":2,"endColumn":31},{"ruleId":"131","severity":1,"message":"135","line":2,"column":8,"nodeType":"133","messageId":"134","endLine":2,"endColumn":17},{"ruleId":"143","severity":1,"message":"144","line":3,"column":1,"nodeType":"145","endLine":8,"endColumn":2},{"ruleId":"131","severity":1,"message":"146","line":1,"column":18,"nodeType":"133","messageId":"134","endLine":1,"endColumn":28},{"ruleId":"131","severity":1,"message":"147","line":2,"column":10,"nodeType":"133","messageId":"134","endLine":2,"endColumn":20},{"ruleId":"131","severity":1,"message":"148","line":2,"column":22,"nodeType":"133","messageId":"134","endLine":2,"endColumn":30},{"ruleId":"131","severity":1,"message":"149","line":2,"column":32,"nodeType":"133","messageId":"134","endLine":2,"endColumn":46},{"ruleId":"143","severity":1,"message":"150","line":7,"column":1,"nodeType":"145","endLine":30,"endColumn":2},{"ruleId":"131","severity":1,"message":"151","line":3,"column":10,"nodeType":"133","messageId":"134","endLine":3,"endColumn":21},{"ruleId":"131","severity":1,"message":"152","line":6,"column":30,"nodeType":"133","messageId":"134","endLine":6,"endColumn":34},{"ruleId":"143","severity":1,"message":"144","line":1,"column":1,"nodeType":"145","endLine":55,"endColumn":2},{"ruleId":"131","severity":1,"message":"153","line":9,"column":13,"nodeType":"133","messageId":"134","endLine":9,"endColumn":28},{"ruleId":"131","severity":1,"message":"152","line":9,"column":30,"nodeType":"133","messageId":"134","endLine":9,"endColumn":34},"no-native-reassign",["154"],"no-negated-in-lhs",["155"],"no-unused-vars","'Header' is defined but never used.","Identifier","unusedVar","'Container' is defined but never used.","'ContainerFluid' is defined but never used.","'Row' is defined but never used.","'Col' is defined but never used.","'Sidebar' is defined but never used.","'Link' is defined but never used.","'AuthService' is defined but never used.","'IndeterminateCheckBox' is defined but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'IconButton' is defined but never used.","'AttachFile' is defined but never used.","'MoreVert' is defined but never used.","'SearchOutlined' is defined but never used.","Assign arrow function to a variable before exporting as module default","'AuthContext' is defined but never used.","'user' is assigned a value but never used.","'isAuthenticated' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]